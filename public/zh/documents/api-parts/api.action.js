window.__EC_DOC_api_action = {"highlight":{"desc":"<p>高亮指定的数据图形。</p>\n<pre><code class=\"lang-ts\">// 如果要高亮系列：\ndispatchAction({\n    type: &#39;highlight&#39;,\n\n    // 用 index 或 id 或 name 来指定系列。\n    // 可以使用数组指定多个系列。\n    seriesIndex?: number | number[],\n    seriesId?: string | string[],\n    seriesName?: string | string[],\n\n    // 数据项的 index，如果不指定也可以通过 name 属性根据名称指定数据项\n    dataIndex?: number | number[],\n    // 可选，数据项名称，在有 dataIndex 的时候忽略\n    name?: string | string[],\n});\n\n// 如果要高亮 geo 组件（从 `v5.1.0` 开始支持）：\ndispatchAction({\n    type: &#39;highlight&#39;,\n\n    // 用 index 或 id 或 name 来指定 geo 组件。\n    // 可以用数组指定多个 geo 组件。\n    geoIndex?: number | number[],\n    geoId?: string | string[],\n    geoName?: string | string[],\n\n    // geo 组件中 region 名称。\n    // 可以是一个数组指定多个名称。\n    name?: string | string[],\n});\n</code></pre>\n"},"downplay":{"desc":"<p>取消高亮指定的数据图形。</p>\n<pre><code class=\"lang-ts\">// 如果要取消高亮系列：\ndispatchAction({\n    type: &#39;downplay&#39;,\n\n    // 用 index 或 id 或 name 来指定系列。\n    // 可以使用数组指定多个系列。\n    seriesIndex?: number | number[],\n    seriesId?: string | string[],\n    seriesName?: string | string[],\n\n    // 数据项的 index，如果不指定也可以通过 name 属性根据名称指定数据项\n    dataIndex?: number | number[],\n    // 可选，数据项名称，在有 dataIndex 的时候忽略\n    name?: string | string[],\n})\n\n// 如果要取消高亮 geo 组件（从 `v5.1.0` 开始支持）：\ndispatchAction({\n    type: &#39;downplay&#39;,\n\n    // 用 index 或 id 或 name 来指定 geo 组件。\n    // 可以用数组指定多个 geo 组件。\n    geoIndex?: number | number[],\n    geoId?: string | string[],\n    geoName?: string | string[],\n\n    // geo 组件中 region 名称。\n    // 可以是一个数组指定多个名称。\n    name?: string | string[],\n});\n</code></pre>\n"},"select":{"desc":"<p>选中指定的数据。选中数据会使用 <a href=\"option.html#series-bar.select\" target=\"_blank\">select</a> 配置的样式。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;select&#39;,\n\n    // 用 index 或 id 或 name 来指定系列。\n    // 可以使用数组指定多个系列。\n    seriesIndex?: number | number[],\n    seriesId?: string | string[],\n    seriesName?: string | string[],\n\n    // 数据项的 index，如果不指定也可以通过 name 属性根据名称指定数据项\n    dataIndex?: number | number[],\n    // 可选，数据项名称，在有 dataIndex 的时候忽略\n    name?: string | string[],\n})\n</code></pre>\n"},"unselect":{"desc":"<p>取消选中指定的数据。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;unselect&#39;,\n\n    // 用 index 或 id 或 name 来指定系列。\n    // 可以使用数组指定多个系列。\n    seriesIndex?: number | number[],\n    seriesId?: string | string[],\n    seriesName?: string | string[],\n\n    // 数据项的 index，如果不指定也可以通过 name 属性根据名称指定数据项\n    dataIndex?: number | number[],\n    // 可选，数据项名称，在有 dataIndex 的时候忽略\n    name?: string | string[],\n})\n</code></pre>\n"},"toggleSelect":{"desc":"<p>切换选中状态</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;toggleSelect&#39;,\n\n    // 用 index 或 id 或 name 来指定系列。\n    // 可以使用数组指定多个系列。\n    seriesIndex?: number | number[],\n    seriesId?: string | string[],\n    seriesName?: string | string[],\n\n    // 数据项的 index，如果不指定也可以通过 name 属性根据名称指定数据项\n    dataIndex?: number | number[],\n    // 可选，数据项名称，在有 dataIndex 的时候忽略\n    name?: string | string[],\n})\n</code></pre>\n"},"legend":{"desc":"<p><a href=\"option.html#legend\" target=\"_blank\">图例组件</a>相关的行为，必须引入<a href=\"option.html#legend\" target=\"_blank\">图例组件</a>后才能使用。</p>\n"},"legend.legendSelect":{"desc":"<p>选中图例。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;legendSelect&#39;,\n    // 图例名称\n    name: string\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.legendselected\">legendselected</a></p>\n"},"legend.legendUnSelect":{"desc":"<p>取消选中图例。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;legendUnSelect&#39;,\n    // 图例名称\n    name: string\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.legendunselected\">legendunselected</a></p>\n"},"legend.legendToggleSelect":{"desc":"<p>切换图例的选中状态。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;legendToggleSelect&#39;,\n    // 图例名称\n    name: string\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.legendselectchanged\">legendselectchanged</a></p>\n"},"legend.legendAllSelect":{"desc":"<p>将图例全选。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;legendAllSelect&#39;\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.legendselectall\">legendselectall</a></p>\n"},"legend.legendInverseSelect":{"desc":"<p>将图例反选。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;legendInverseSelect&#39;\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.legendinverseselect\">legendinverseselect</a></p>\n"},"legend.legendScroll":{"desc":"<p>控制图例的滚动。当 <a href=\"option.html#legend.type\" target=\"_blank\">legend.type</a> 为 <code class=\"codespan\">&#39;scroll&#39;</code> 时有效。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;legendScroll&#39;,\n    scrollDataIndex: number,\n    legendId: string\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.legendscroll\">legendscroll</a></p>\n"},"tooltip":{"desc":"<p><a href=\"option.html#tooltip\" target=\"_blank\">提示框组件</a>相关的行为，必须引入<a href=\"option.html#tooltip\" target=\"_blank\">提示框组件</a>后才能使用。</p>\n"},"tooltip.showTip":{"desc":"<p>显示提示框。</p>\n<p>有下面几种使用方式。</p>\n<p>1 指定在相对容器的位置处显示提示框，如果指定的位置无法显示则无效。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;showTip&#39;,\n    // 屏幕上的 x 坐标\n    x: number,\n    // 屏幕上的 y 坐标\n    y: number,\n    // 本次显示 tooltip 的位置。只在本次 action 中生效。\n    // 缺省则使用 option 中定义的 tooltip 位置。\n    position: number[] | string | Function,\n})\n</code></pre>\n<p>2 指定系列中的数据图形，根据 tooltip 的配置项显示提示框。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;showTip&#39;,\n    // 系列的 index，在 tooltip 的 trigger 为 axis 的时候可选。\n    seriesIndex?: number,\n    // 数据项的 index，如果不指定也可以通过 name 属性根据名称指定数据项\n    dataIndex?: number,\n    // 可选，数据项名称，在有 dataIndex 的时候忽略\n    name?: string,,\n    // 本次显示 tooltip 的位置。只在本次 action 中生效。\n    // 缺省则使用 option 中定义的 tooltip 位置。\n    position: number[] | string | Function,\n})\n</code></pre>\n<p>3 指定 geo 组件中的 region 名，根据 tooltip 的配置项显示提示框。</p>\n<blockquote>\n<p>从 <code class=\"codespan\">v5.1.0</code> 开始支持</p>\n</blockquote>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;showTip&#39;,\n    // 用 index 或 id 或 name 来指定 geo 组件。\n    // 可以用数组指定多个 geo 组件。\n    geoIndex?: number | number[],\n    geoId?: string | string[],\n    geoName?: string | string[],\n    // geo 组件中 region 名称。\n    name?: string,\n    // 本次显示 tooltip 的位置。只在本次 action 中生效。\n    // 缺省则使用 option 中定义的 tooltip 位置。\n    position: number[] | string | Function,\n})\n</code></pre>\n<p>参数<code class=\"codespan\">position</code>同<a href=\"option.html#tooltip.position\" target=\"_blank\">tooltip.position</a>相同。</p>\n"},"tooltip.hideTip":{"desc":"<p>隐藏提示框。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;hideTip&#39;\n})\n</code></pre>\n"},"dataZoom":{"desc":"<p><a href=\"option.html#dataZoom\" target=\"_blank\">数据区域缩放组件</a>相关的行为，必须引入<a href=\"option.html#dataZoom\" target=\"_blank\">数据区域缩放组件</a>后才能使用。</p>\n"},"dataZoom.dataZoom":{"desc":"<p>数据区域缩放。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;dataZoom&#39;,\n    // 可选，dataZoom 组件的 index，多个 dataZoom 组件时有用，默认为 0\n    dataZoomIndex: number,\n    // 开始位置的百分比，0 - 100\n    start: number,\n    // 结束位置的百分比，0 - 100\n    end: number,\n    // 开始位置的数值\n    startValue: number,\n    // 结束位置的数值\n    endValue: number\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.datazoom\">datazoom</a></p>\n"},"dataZoom.takeGlobalCursor":{"desc":"<p>启动或关闭 <code class=\"codespan\">toolbox</code> 中 <code class=\"codespan\">dataZoom</code> 的刷选状态。</p>\n<pre><code class=\"lang-ts\">myChart.dispatchAction({\n    type: &#39;takeGlobalCursor&#39;,\n    key: &#39;dataZoomSelect&#39;,\n    // 启动或关闭\n    dataZoomSelectActive: true\n});\n</code></pre>\n"},"visualMap":{"desc":"<p><a href=\"option.html#visualMap\" target=\"_blank\">视觉映射组件</a>相关的行为，必须引入<a href=\"option.html#visualMap\" target=\"_blank\">视觉映射组件</a>后才能使用。</p>\n"},"visualMap.selectDataRange":{"desc":"<p>选取映射的数值范围。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;selectDataRange&#39;,\n    // 可选，visualMap 组件的 index，多个 visualMap 组件时有用，默认为 0\n    visualMapIndex: number,\n    // 连续型 visualMap 和 离散型 visualMap 不一样\n    // 连续型的是一个表示数值范围的数组。\n    // 离散型的是一个对象，键值是类目或者分段的索引。值是 `true`, `false`\n    selected: Object|Array\n})\n</code></pre>\n<p>å\n<strong>示例：</strong></p>\n<pre><code class=\"lang-ts\">myChart.dispatchAction({\n    type: &#39;selectDataRange&#39;,\n    // 选取 20 到 40 的值范围\n    selected: [20, 40],\n    // 取消选中第二段\n    selected: { 1: false },\n    // 取消选中类目 `优`\n    selected: { &#39;优&#39;: false }\n});\n\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.datarangeselected\">datarangeselected</a></p>\n"},"timeline":{"desc":"<p><a href=\"option.html#timeline\" target=\"_blank\">时间轴组件</a>相关的行为，必须引入<a href=\"option.html#timeline\" target=\"_blank\">时间轴组件</a>后才能使用。</p>\n"},"timeline.timelineChange":{"desc":"<p>设置当前的时间点。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;timelineChange&#39;,\n    // 时间点的 index\n    currentIndex: number\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.timelinechanged\">timelinechanged</a></p>\n"},"timeline.timelinePlayChange":{"desc":"<p>切换时间轴的播放状态。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;timelinePlayChange&#39;,\n    // 播放状态，true 为自动播放\n    playState: boolean\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.timelineplaychanged\">timelineplaychanged</a></p>\n"},"toolbox":{"desc":"<p><a href=\"option.html#toolbox\" target=\"_blank\">工具栏组件</a>相关的行为，必须引入<a href=\"option.html#toolbox\" target=\"_blank\">工具栏组件</a>后才能使用。</p>\n"},"toolbox.restore":{"desc":"<p>重置 option。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;restore&#39;\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.restore\">restore</a></p>\n"},"geo":{"desc":"<p><a href=\"option.html#series-geo\" target=\"_blank\">地图组件</a>相关的行为，必须引入<a href=\"option.html#geo\" target=\"_blank\">地图组件</a>后才能使用。</p>\n"},"geo.geoSelect":{"desc":"<p>选中指定的地图区域。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;geoSelect&#39;,\n\n    // 用 index 或 id 或 name 来指定 geo 组件。\n    // 可以用数组指定多个 geo 组件。\n    geoIndex?: number | number[],\n    geoId?: string | string[],\n    geoName?: string | string[],\n\n\n    // geo 组件中 region 名称。\n    name?: string,\n\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.geoselected\">geoselected</a></p>\n"},"geo.geoUnSelect":{"desc":"<p>取消选中指定的地图区域。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;geoUnSelect&#39;,\n\n    // 用 index 或 id 或 name 来指定 geo 组件。\n    // 可以用数组指定多个 geo 组件。\n    geoIndex?: number | number[],\n    geoId?: string | string[],\n    geoName?: string | string[],\n\n\n    // geo 组件中 region 名称。\n    name?: string,\n\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.geounselected\">geounselected</a></p>\n"},"geo.geoToggleSelect":{"desc":"<p>切换指定的地图区域选中状态。</p>\n<pre><code class=\"lang-ts\">dispatchAction({\n    type: &#39;geoToggleSelect&#39;,\n\n    // 用 index 或 id 或 name 来指定 geo 组件。\n    // 可以用数组指定多个 geo 组件。\n    geoIndex?: number | number[],\n    geoId?: string | string[],\n    geoName?: string | string[],\n\n\n    // geo 组件中 region 名称。\n    name?: string,\n\n})\n</code></pre>\n<p><strong>EVENT:</strong> <a href=\"#events.geoselectchanged\">geoselectchanged</a></p>\n"},"brush":{"desc":"<p><a href=\"option.html#brush\" target=\"_blank\">区域选择</a>相关的行为。</p>\n"},"brush.brush":{"desc":"<p>“刷选”动作进行中时，会触发此 action。\n此 action 能设置或删除 chart 中的选框，例如：</p>\n<pre><code class=\"lang-javascript\">myChart.dispatchAction({\n    type: &#39;brush&#39;,\n    areas: [ // areas 表示选框的集合，可以指定多个选框。\n             // 如果 areas 为空，则删除所有选框。\n             // 注意这并非增量接口而是全量接口，所以应包括所有的选框。\n        { // 选框一：\n\n            // 指定此选框是“坐标系选框”，属于 index 为 0 的 geo 坐标系。\n            // 也可以通过 xAxisIndex 或 yAxisIndex 来指定此选框属于直角坐标系。\n            // 如果没有指定，则此选框属于“全局选框”。不属于任何坐标系。\n            // 属于『坐标系选框』，可以随坐标系一起缩放平移。属于全局的选框不行。\n            geoIndex: 0,\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 指定选框的类型。可以为 &#39;polygon&#39;, &#39;rect&#39;, &#39;lineX&#39;, &#39;lineY&#39;\n            brushType: &#39;polygon&#39;,\n\n            // 如果是“全局选框”，则使用 range 来描述选框的范围（里面是像素坐标）。\n            range: [\n                ...\n            ],\n            // 如果是“坐标系选框”，则使用 coordRange 来指定选框的范围（里面是坐标系坐标）。\n            coordRange: [\n                // 这个例子中，因为指定了 geoIndex，所以 coordRange 里单位是经纬度。\n                [119.72,34.85],[119.68,34.85],[119.5,34.84],[119.19,34.77]\n            ]\n        },\n        ... // 选框二、三、四、...\n    ]\n});\n</code></pre>\n<p>其中，<code class=\"codespan\">areas</code> 中的 <code class=\"codespan\">range</code> 和 <code class=\"codespan\">coordRange</code> 的格式，根据 brushType 不同而不同：</p>\n<ul>\n<li>brushType 为 &#39;rect&#39;\n  <code class=\"codespan\">range</code> 和 <code class=\"codespan\">coordRange</code> 的格式为：<code class=\"codespan\">[[minX, maxX], [minY, maxY]]</code></li>\n<li>brushType 为 &#39;lineX&#39; 或 &#39;lineY&#39;\n  <code class=\"codespan\">range</code> 和 <code class=\"codespan\">coordRange</code> 的格式为：[min, maxX]</li>\n<li>brushType 为 &#39;polygon&#39;\n  <code class=\"codespan\">range</code> 和 <code class=\"codespan\">coordRange</code> 的格式为：[[point1X, point1X], [point2X, point2X], ...]</li>\n</ul>\n<p><code class=\"codespan\">range</code> 和 <code class=\"codespan\">coordRange</code> 的区别是：</p>\n<ul>\n<li>当此选框为『全局选框』时，使用 <code class=\"codespan\">range</code>。</li>\n<li>当此选框为『坐标系选框』时（即指定了 <code class=\"codespan\">geoIndex</code> 或 <code class=\"codespan\">xAxisIndex</code> 或 <code class=\"codespan\">yAxisIndex</code> 时），使用 <code class=\"codespan\">coordRange</code>。</li>\n<li><code class=\"codespan\">range</code> 的单位为 <em>像素</em>，<code class=\"codespan\">coordRange</code> 的单位为 <em>坐标系单位</em>，比如 geo 中，<code class=\"codespan\">coordRange</code> 单位为经纬度，直角坐标系中，coordRange 单位为对应轴的数据的单位。</li>\n</ul>\n"},"brush.brushEnd":{"desc":"<blockquote>\n<p>从 <code class=\"codespan\">v4.5.0</code> 开始支持</p>\n</blockquote>\n<p>“刷选” 动作完毕时，会自动触发此 action。\n其参数和 <a href=\"#action.brush.brush\">brush action</a> 完全相同。</p>\n"},"brush.takeGlobalCursor":{"desc":"<p>刷选模式的开关。使用此 action 可将当前鼠标变为可刷选状态。\n事实上，点击 <a href=\"option.html#toolbox.feature.brush\" target=\"_blank\">toolbox</a> 中的 brush 按钮时，就是通过这个 action，将当前普通鼠标变为刷选器的。例如：</p>\n<p>此 action 对应的事件为 <a href=\"#events.globalCursorTaken\">globalCursorTaken</a>。</p>\n<pre><code class=\"lang-ts\">api.dispatchAction({\n    type: &#39;takeGlobalCursor&#39;,\n    // 如果想变为“可刷选状态”，必须设置。不设置则会关闭“可刷选状态”。\n    key: &#39;brush&#39;,\n    brushOption: {\n        // 参见 brush 组件的 brushType。如果设置为 false 则关闭“可刷选状态”。\n        brushType: string,\n        // 参见 brush 组件的 brushMode。如果不设置，则取 brush 组件的 brushMode 设置。\n        brushMode: string\n    }\n});\n</code></pre>\n"}}