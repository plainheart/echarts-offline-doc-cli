window.__EC_DOC_option_gl_xAxis3D = {"show":{"desc":"<p>是否显示 x 轴。</p>\n"},"name":{"desc":"<p>坐标轴名称。</p>\n"},"grid3DIndex":{"desc":"<p>坐标轴使用的 <a href=\"#grid3D\">grid3D</a> 组件的索引。默认使用第一个 <a href=\"#grid3D\">grid3D</a> 组件。</p>\n"},"nameTextStyle":{"desc":"<p>坐标轴名称的文字样式。</p>\n"},"nameTextStyle.color":{"desc":"<p>坐标轴名称的颜色，默认取 <a href=\"#xAxis3D.axisLine.lineStyle.color\">axisLine.lineStyle.color</a>。</p>\n"},"nameTextStyle.borderWidth":{"desc":"<p>文字的描边宽度。</p>\n"},"nameTextStyle.borderColor":{"desc":"<p>文字的描边颜色。</p>\n"},"nameTextStyle.fontFamily":{"desc":"<p>文字的字体系列。</p>\n"},"nameTextStyle.fontSize":{"desc":"<p>文字的字体大小。</p>\n"},"nameTextStyle.fontWeight":{"desc":"<p>文字字体的粗细。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code class=\"codespan\">&#39;normal&#39;</code></li>\n<li><code class=\"codespan\">&#39;bold&#39;</code></li>\n<li><code class=\"codespan\">&#39;bolder&#39;</code></li>\n<li><code class=\"codespan\">&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n"},"nameGap":{"desc":"<p>坐标轴名称与轴线之间的距离，注意是三维空间的距离而非屏幕像素值。</p>\n"},"type":{"desc":"<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code class=\"codespan\">&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code class=\"codespan\">&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#xAxis3D.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code class=\"codespan\">&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月、星期、日、小时范围的刻度。</p>\n</li>\n<li><p><code class=\"codespan\">&#39;log&#39;</code>\n  对数轴，适用于对数数据。</p>\n</li>\n</ul>\n"},"min":{"desc":"<p>坐标轴刻度最小值。</p>\n<p>可以设置成特殊值 <code class=\"codespan\">&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n<p>在类目轴中，也可以设置为类目的序数（如类目轴 <code class=\"codespan\">data: [&#39;类A&#39;, &#39;类B&#39;, &#39;类C&#39;]</code> 中，序数 <code class=\"codespan\">2</code> 表示 <code class=\"codespan\">&#39;类C&#39;</code>。也可以设置为负数，如 <code class=\"codespan\">-3</code>）。</p>\n"},"max":{"desc":"<p>坐标轴刻度最大值。</p>\n<p>可以设置成特殊值 <code class=\"codespan\">&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>如果不设置，则会自动计算最大值来保证坐标轴刻度的均匀分布。</p>\n<p>在类目轴中，也可以设置为类目的序数（如类目轴 <code class=\"codespan\">data: [&#39;类A&#39;, &#39;类B&#39;, &#39;类C&#39;]</code> 中，序数 <code class=\"codespan\">2</code> 表示 <code class=\"codespan\">&#39;类C&#39;</code>。也可以设置为负数，如 <code class=\"codespan\">-3</code>）。</p>\n"},"scale":{"desc":"<p>只在数值轴中（<a href=\"#xAxis3D.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code class=\"codespan\">true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#xAxis3D.min\">min</a> 和 <a href=\"#xAxis3D.max\">max</a> 之后该配置项无效。</p>\n"},"splitNumber":{"desc":"<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n"},"minInterval":{"desc":"<p>自动计算的坐标轴最小间隔大小。</p>\n<p>例如可以设置成<code class=\"codespan\">1</code>保证坐标轴分割刻度显示成整数。</p>\n<pre><code class=\"lang-ts\">{\n    minInterval: 1\n}\n</code></pre>\n<p>只在数值轴中（<a href=\"#xAxis3D.type\">type</a>: &#39;value&#39;）有效。</p>\n"},"interval":{"desc":"<p>强制设置坐标轴分割间隔。</p>\n<p>因为 <a href=\"#xAxis3D.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#xAxis3D.min\">min</a>、<a href=\"#xAxis3D.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#xAxis3D.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#xAxis3D.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"},"logBase":{"desc":"<p>对数轴的底数，只在对数轴中（<a href=\"#xAxis3D.type\">type</a>: &#39;log&#39;）有效。</p>\n"},"data":{"desc":"<p>类目数据，在类目轴（<a href=\"#xAxis3D.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>如果设置了 <a href=\"#xAxis3D.type\">type</a> 是 <code class=\"codespan\">&#39;category&#39;</code>，但没有设置 <code class=\"codespan\">axis.data</code>，则 <code class=\"codespan\">axis.data</code> 的内容会自动从 <a href=\"#series.data\">series.data</a> 中获取，这会比较方便。不过注意，<code class=\"codespan\">axis.data</code> 指明的是 <code class=\"codespan\">&#39;category&#39;</code> 轴的取值范围。如果不指定而是从 <a href=\"#series.data\">series.data</a> 中获取，那么只能获取到 <a href=\"#series.data\">series.data</a> 中出现的值。比如说，假如 <a href=\"#series.data\">series.data</a> 为空时，就什么也获取不到。</p>\n<p>示例：</p>\n<pre><code class=\"lang-ts\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n"},"data.value":{"desc":"<p>单个类目名称。</p>\n"},"data.textStyle":{"desc":"<p>类目标签的文字样式。</p>\n"},"data.textStyle.color":{"desc":"<p>文字的颜色。</p>\n"},"data.textStyle.borderWidth":{"desc":"<p>文字的描边宽度。</p>\n"},"data.textStyle.borderColor":{"desc":"<p>文字的描边颜色。</p>\n"},"data.textStyle.fontFamily":{"desc":"<p>文字的字体系列。</p>\n"},"data.textStyle.fontSize":{"desc":"<p>文字的字体大小。</p>\n"},"data.textStyle.fontWeight":{"desc":"<p>文字字体的粗细。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code class=\"codespan\">&#39;normal&#39;</code></li>\n<li><code class=\"codespan\">&#39;bold&#39;</code></li>\n<li><code class=\"codespan\">&#39;bolder&#39;</code></li>\n<li><code class=\"codespan\">&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n"},"axisLine":{"desc":"<p>坐标轴轴线相关设置。</p>\n"},"axisLine.show":{"desc":"<p>是否显示坐标轴轴线。</p>\n"},"axisLine.interval":{"desc":"<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会自动计算<code class=\"codespan\">interval</code>以保证较好的展示效果。</p>\n<p>可以设置成 0 强制显示所有标签。</p>\n<p>如果设置为 <code class=\"codespan\">1</code>，表示『隔一个标签显示一个标签』，如果值为 <code class=\"codespan\">2</code>，表示『隔两个标签显示一个标签』，以此类推。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-ts\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code class=\"codespan\">false</code>。</p>\n"},"axisLine.lineStyle.color":{"desc":"<p>线条的颜色。</p>\n<p>除了颜色字符串外，支持使用数组表示的 RGBA 值，例如：</p>\n<pre><code class=\"lang-ts\">// 纯白色\n[1, 1, 1, 1]\n</code></pre>\n<p>使用数组表示的时候，每个通道可以设置大于 1 的值用于表示 HDR 的色值。</p>\n"},"axisLine.lineStyle.opacity":{"desc":"<p>线条的不透明度。</p>\n"},"axisLine.lineStyle.width":{"desc":"<p>线条的宽度。</p>\n"},"axisLabel":{"desc":"<p>坐标轴刻度标签的相关设置。</p>\n"},"axisLabel.show":{"desc":"<p>是否显示刻度标签。</p>\n"},"axisLabel.margin":{"desc":"<p>刻度标签与轴线之间的距离。</p>\n<p><strong>注意：</strong> 这个距离是三维空间而非屏幕空间的。</p>\n"},"axisLabel.interval":{"desc":"<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会自动计算<code class=\"codespan\">interval</code>以保证较好的展示效果。</p>\n<p>可以设置成 0 强制显示所有标签。</p>\n<p>如果设置为 <code class=\"codespan\">1</code>，表示『隔一个标签显示一个标签』，如果值为 <code class=\"codespan\">2</code>，表示『隔两个标签显示一个标签』，以此类推。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-ts\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code class=\"codespan\">false</code>。</p>\n"},"axisLabel.textStyle.color":{"desc":"<p>刻度标签文字的颜色，默认取 <a href=\"#.axisLine.lineStyle.color\">axisLine.lineStyle.color</a>。支持回调函数，格式如下</p>\n<pre><code class=\"lang-ts\">(val: string) =&gt; Color\n</code></pre>\n<p>参数是标签的文本，返回颜色值，如下示例：</p>\n<pre><code class=\"lang-ts\">textStyle: {\n    color: function (value, index) {\n        return value &gt;= 0 ? &#39;green&#39; : &#39;red&#39;;\n    }\n}\n</code></pre>\n"},"axisLabel.textStyle.borderWidth":{"desc":"<p>文字的描边宽度。</p>\n"},"axisLabel.textStyle.borderColor":{"desc":"<p>文字的描边颜色。</p>\n"},"axisLabel.textStyle.fontFamily":{"desc":"<p>文字的字体系列。</p>\n"},"axisLabel.textStyle.fontSize":{"desc":"<p>文字的字体大小。</p>\n"},"axisLabel.textStyle.fontWeight":{"desc":"<p>文字字体的粗细。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code class=\"codespan\">&#39;normal&#39;</code></li>\n<li><code class=\"codespan\">&#39;bold&#39;</code></li>\n<li><code class=\"codespan\">&#39;bolder&#39;</code></li>\n<li><code class=\"codespan\">&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n"},"axisTick":{"desc":"<p>坐标轴刻度相关设置。</p>\n"},"axisTick.show":{"desc":"<p>是否显示坐标轴刻度。</p>\n"},"axisTick.interval":{"desc":"<p>坐标轴刻度标签的显示间隔，在类目轴中有效。默认同 <a href=\"#.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会自动计算<code class=\"codespan\">interval</code>以保证较好的展示效果。</p>\n<p>可以设置成 0 强制显示所有标签。</p>\n<p>如果设置为 <code class=\"codespan\">1</code>，表示『隔一个标签显示一个标签』，如果值为 <code class=\"codespan\">2</code>，表示『隔两个标签显示一个标签』，以此类推。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-ts\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code class=\"codespan\">false</code>。</p>\n"},"axisTick.length":{"desc":"<p>坐标轴刻度的长度。</p>\n"},"axisTick.lineStyle.color":{"desc":"<p>刻度线的颜色，默认取 <a href=\"#.axisLine.lineStyle.color\">axisLine.lineStyle.color</a>。</p>\n"},"axisTick.lineStyle.opacity":{"desc":"<p>线条的不透明度。</p>\n"},"axisTick.lineStyle.width":{"desc":"<p>线条的宽度。</p>\n"},"splitLine":{"desc":"<p>坐标轴轴线相关设置。</p>\n"},"splitLine.show":{"desc":"<p>是否显示坐标轴轴线。</p>\n"},"splitLine.interval":{"desc":"<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会自动计算<code class=\"codespan\">interval</code>以保证较好的展示效果。</p>\n<p>可以设置成 0 强制显示所有标签。</p>\n<p>如果设置为 <code class=\"codespan\">1</code>，表示『隔一个标签显示一个标签』，如果值为 <code class=\"codespan\">2</code>，表示『隔两个标签显示一个标签』，以此类推。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-ts\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code class=\"codespan\">false</code>。</p>\n"},"splitLine.lineStyle.color":{"desc":"<p>线条的颜色。</p>\n<p>除了颜色字符串外，支持使用数组表示的 RGBA 值，例如：</p>\n<pre><code class=\"lang-ts\">// 纯白色\n[1, 1, 1, 1]\n</code></pre>\n<p>使用数组表示的时候，每个通道可以设置大于 1 的值用于表示 HDR 的色值。</p>\n"},"splitLine.lineStyle.opacity":{"desc":"<p>线条的不透明度。</p>\n"},"splitLine.lineStyle.width":{"desc":"<p>线条的宽度。</p>\n"},"splitArea":{"desc":"<p>坐标轴在 <a href=\"#grid3D\">grid3D</a> 的平面上的分隔区域。</p>\n"},"splitArea.show":{"desc":"<p>是否显示分隔区域。</p>\n"},"splitArea.interval":{"desc":"<p>坐标轴分隔区域的显示间隔，在类目轴中有效。默认同 <a href=\"#.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会自动计算<code class=\"codespan\">interval</code>以保证较好的展示效果。</p>\n<p>可以设置成 0 强制显示所有标签。</p>\n<p>如果设置为 <code class=\"codespan\">1</code>，表示『隔一个标签显示一个标签』，如果值为 <code class=\"codespan\">2</code>，表示『隔两个标签显示一个标签』，以此类推。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-ts\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code class=\"codespan\">false</code>。</p>\n"},"splitArea.areaStyle":{"desc":"<p>分隔区域的样式设置。</p>\n"},"splitArea.areaStyle.color":{"desc":"<p>分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。</p>\n"},"axisPointer":{"desc":"<p>坐标轴指示线。</p>\n"},"axisPointer.show":{"desc":"<p>是否显示坐标轴指示线。</p>\n"},"axisPointer.lineStyle.color":{"desc":"<p>线条的颜色。</p>\n<p>除了颜色字符串外，支持使用数组表示的 RGBA 值，例如：</p>\n<pre><code class=\"lang-ts\">// 纯白色\n[1, 1, 1, 1]\n</code></pre>\n<p>使用数组表示的时候，每个通道可以设置大于 1 的值用于表示 HDR 的色值。</p>\n"},"axisPointer.lineStyle.opacity":{"desc":"<p>线条的不透明度。</p>\n"},"axisPointer.lineStyle.width":{"desc":"<p>线条的宽度。</p>\n"},"axisPointer.label":{"desc":"<p>指示线标签。</p>\n"},"axisPointer.label.show":{"desc":"<p>是否显示指示线标签。默认数值轴显示，类目轴不显示。</p>\n"},"axisPointer.label.formatter":{"desc":"<p>标签格式器，函数第一个参数是当前坐标轴的数值，第二个参数是所有坐标轴的数值数组。</p>\n<pre><code class=\"lang-ts\">(value: number, valueAll: Array) =&gt; string\n</code></pre>\n"},"axisPointer.label.margin":{"desc":"<p>标签距离坐标轴的距离。同刻度标签一样，这个距离是三维空间而非屏幕像素。</p>\n"},"axisPointer.label.textStyle.color":{"desc":"<p>文字的颜色。</p>\n"},"axisPointer.label.textStyle.borderWidth":{"desc":"<p>文字的描边宽度。</p>\n"},"axisPointer.label.textStyle.borderColor":{"desc":"<p>文字的描边颜色。</p>\n"},"axisPointer.label.textStyle.fontFamily":{"desc":"<p>文字的字体系列。</p>\n"},"axisPointer.label.textStyle.fontSize":{"desc":"<p>文字的字体大小。</p>\n"},"axisPointer.label.textStyle.fontWeight":{"desc":"<p>文字字体的粗细。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code class=\"codespan\">&#39;normal&#39;</code></li>\n<li><code class=\"codespan\">&#39;bold&#39;</code></li>\n<li><code class=\"codespan\">&#39;bolder&#39;</code></li>\n<li><code class=\"codespan\">&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n"}}