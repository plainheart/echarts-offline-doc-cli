window.__EC_DOC_option_gl_series_flowGL = {"particleDensity":{"desc":"<p>粒子的密度，实际的粒子数量是设置数目的平方。粒子密度越大迹线效果越好，但是性能开销也会越大。除了该属性，使用 <a href=\"#series-flowGL.particleType\">particleType</a> 也可以得到更加清晰连贯的迹线。</p>\n"},"particleType":{"desc":"<p>粒子的类型，默认为点 <code class=\"codespan\">&#39;point&#39;</code>，可以设置成线 <code class=\"codespan\">&#39;line&#39;</code>。线类型的粒子会用一条线连接上个运动的位置和当前运动的位置，这会让这个轨迹更加连贯。</p>\n<p>下面是类型分别是<code class=\"codespan\">&#39;point&#39;</code>和<code class=\"codespan\">&#39;line&#39;</code>的区别。</p>\n<div  class=\"twentytwenty-container\" style=\"width: 700px;\">\n    <img  src=\"documents/asset/gl/img/flowGL-point.jpg\" width=\"100%\" title=\"Point\"></img>\n    <img  src=\"documents/asset/gl/img/flowGL-line.jpg\" width=\"100%\" title=\"Line\"></img>\n</div>\n"},"particleSize":{"desc":"<p>粒子的大小，如果 <a href=\"#series-flowGL.particleType\">particleType</a> 是 <code class=\"codespan\">&#39;line&#39;</code> 的话则会通过线宽的形式表现。</p>\n"},"particleSpeed":{"desc":"<p>粒子的速度，默认为 1。注意在 <a href=\"#series-flowGL.particleType\">particleType</a> 为 <code class=\"codespan\">&#39;point&#39;</code> 的时候过大的速度会让整个轨迹变得断断续续。</p>\n"},"particleTrail":{"desc":"<p>粒子的轨迹长度，数值越大轨迹越长。</p>\n"},"supersampling":{"desc":"<p>画面的超采样比率，采用<code class=\"codespan\">4</code>的超采样可以有效的提高画面的清晰度，减少画面锯齿。但是因为需要处理更多的像素数量，所以也对性能有更高的要求。</p>\n<p>下面分别是没有超采样和超采样值为 4 的区别。</p>\n<div  class=\"twentytwenty-container\" style=\"width: 700px;\">\n    <img  src=\"documents/asset/gl/img/flowGL-noss.jpg\" width=\"100%\" title=\"No supersampling\"></img>\n    <img  src=\"documents/asset/gl/img/flowGL-ss.jpg\" width=\"100%\" title=\"Supersampling=4\"></img>\n</div>\n"},"gridWidth":{"desc":"<p>传入的网格数据的网格宽度数量。<code class=\"codespan\">flowGL</code> 会根据这个值和 <a href=\"#series-flowGL.gridHeight\">gridHeight</a> 创建存储向量场的浮点纹理，用于粒子的轨迹计算。</p>\n"},"gridHeight":{"desc":"<p>传入的网格数据的网格高度数量。</p>\n"},"data":{"desc":"<p>向量场数据，包含向量的位置和向量的方向（包含大小）。<code class=\"codespan\">flowGL</code> 对数据的存储顺序和没有强制性要求，你甚至可以传入比较稀疏的向量数据。</p>\n<p>如下示例</p>\n<pre><code class=\"lang-ts\">data: [\n    // 每个数据项包含四个值，表示位置的 lng、lat 以及相应维度上的速度 sLng、 sLat.\n    // 如果是直角坐标系上的话则是表示位置的 x、y 以及相应维度上的速度 sx、sy\n    [0, 0, 1, 1], [1, 0, 1, 1],\n    [0, 1, 1, 1], [1, 1, 1, 1]\n];\n</code></pre>\n<p>默认<code class=\"codespan\">flowGL</code>会根据规整的网格形数据自动计算 <a href=\"#series-flowGL.gridWidth\">gridWidth</a> 和 <a href=\"#series-flowGL.gridHeight\">gridHeight</a>。但是因为 flowGL 也支持相对稀疏的数据格式，也可以手动指定这两个值。</p>\n"},"itemStyle":{"desc":"<p>向量场迹线的样式。</p>\n"},"itemStyle.color":{"desc":"<p>向量场迹线的颜色。更多的是按照上面图中演示的通过<code class=\"codespan\">visualMap</code>组件去编码向量的大小。</p>\n"},"itemStyle.opacity":{"desc":"<p>向量场迹线的透明度。</p>\n"}}